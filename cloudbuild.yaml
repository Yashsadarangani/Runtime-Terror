steps:
# 1) Set up python env and install Vertex AI SDK
- name: 'python:3.11'
  id: 'install-deps'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      python -m pip install --upgrade pip
      pip install google-cloud-aiplatform
      pip install pygithub

# 2) Use Vertex AI to generate test cases for backend classes
- name: 'python:3.11'
  id: 'generate-tests'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      python tools/vertex_generate_tests.py \
        --source_dir=src/main/java/backend \
        --out_dir=src/test/java/backend_tests

# 3) Run Maven tests and generate Jacoco report
- name: 'gcr.io/cloud-builders/mvn'
  id: 'run-tests'
  args: ['-B', 'clean', 'test', 'jacoco:report']

# 4) Upload Jacoco reports to GCS
- name: 'gcr.io/cloud-builders/gsutil'
  id: 'upload-artifacts'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      REPORT_DIR=target/site/jacoco
      BUCKET=gs://runtime-terror-code/reports/${SHORT_SHA}
      mkdir -p /workspace/reports
      cp -r ${REPORT_DIR} /workspace/reports || true
      gsutil -m cp -r /workspace/reports/* $BUCKET/

# 5) Enforce coverage gate (example: require minimum 40%)
- name: 'python:3.11'
  id: 'check-coverage'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      python tools/check_coverage.py target/site/jacoco/jacoco.xml 0.40 || { echo "Coverage gate failed"; exit 1; }

timeout: '1200s'

artifacts:
  objects:
    location: 'gs://your-gcs-bucket-name/build-artifacts/${SHORT_SHA}/'
    paths: ['target/','src/test/']
